(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{80:function(e,i,l){"use strict";l.r(i),l.d(i,"frontMatter",(function(){return r})),l.d(i,"metadata",(function(){return u})),l.d(i,"toc",(function(){return m})),l.d(i,"default",(function(){return d}));var t=l(3),n=l(7),a=(l(0),l(89)),r={id:"fields-input-email",title:"Input: Email",sidebar_label:"Input: Email"},u={unversionedId:"fields-input-email",id:"fields-input-email",isDocsHomePage:!1,title:"Input: Email",description:'- Element &lt;input type="email">',source:"@site/docs/fields-input-email.md",slug:"/fields-input-email",permalink:"/svelte-formula/docs/fields-input-email",version:"current",sidebar_label:"Input: Email",sidebar:"someSidebar",previous:{title:"Input: Text",permalink:"/svelte-formula/docs/fields-input-text"}},m=[{value:"Single Value",id:"single-value",children:[]},{value:"Multi Value",id:"multi-value",children:[]}],p={toc:m};function d(e){var i=e.components,l=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},p,l,{components:i,mdxType:"MDXLayout"}),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Element ",Object(a.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email"},"<",'input type="email">'))),Object(a.b)("h2",{id:"single-value"},"Single Value"),Object(a.b)("h4",{id:"required-properties"},"Required Properties"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"name")," - The name of the item should be set"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"type")," - Type should be ",Object(a.b)("inlineCode",{parentName:"li"},"text"))),Object(a.b)("h4",{id:"returned-type"},"Returned Type"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"String")),Object(a.b)("h4",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-svelte"},"<script>\n  import { formula } from 'svelte-formula';\n  const { form, touched, validity } = formula();\n<\/script>\n\n<form use:form>\n  <label for='email-input'>Email Input</label>\n  <input type='email' required id='email-input' name='email'\n         class:error={$touched?.email && $validity?.email?.invalid} />\n  <span hidden={$validity?.email?.valid}>{$validity?.email?.message}</span>\n</form>\n")),Object(a.b)("h2",{id:"multi-value"},"Multi Value"),Object(a.b)("h4",{id:"required-properties-1"},"Required Properties"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"name")," - The name of the item should be set"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"id")," - A unique ID for the value"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"type")," - Type should be ",Object(a.b)("inlineCode",{parentName:"li"},"text"))),Object(a.b)("h4",{id:"returned-type-1"},"Returned Type"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Array of Strings")),Object(a.b)("h4",{id:"example-1"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-svelte"},"<script>\n  import { formula } from 'svelte-formula';\n  const { form, touched, validity } = formula();\n<\/script>\n\n<form use:form>\n  <label for='email-input-1'>Email Input 1</label>\n  <input type='email' required id='email-input-1' name='email'\n         class:error={$touched?.email && $validity?.email?.invalid} />\n\n  <label for='email-input-2'>Email Input 2</label>\n  <input type='email' required id='email-input-2' name='email'\n         class:error={$touched?.email && $validity?.email?.invalid} />\n\n  <span hidden={$validity?.email?.valid}>{$validity?.email?.message}</span>\n</form>\n")))}d.isMDXComponent=!0}}]);